{% extends "base.html.twig" %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" href="{{ asset('css/expenses.css') }}?v=1">
    {{ parent() }}
    <style>
        @media (max-width: 768px) {
            .crumb-container {
                display: flex;
                flex-direction: row;
                flex-wrap: wrap;
                justify-content: center;
                padding: 0;
            }
        }

        html {
            scroll-behavior: smooth;
        }

        .estimateDistance {
            font-weight: 700;
            padding-left: 5px;
        }

        .crumb-container > span {
            margin: 4px 0;
        }

        .form-group > .btn {
            margin: 6px !important;
        }

        /*loading animation*/
        .square-holder {
            padding: 8px;
        }

        .square {
            animation: loadingG 1.5s cubic-bezier(.17, .37, .43, .67) infinite;
        }

        .square {
            width: 12px;
            height: 12px;
            border-radius: 4px;
            background-color: #4b9cdb;
        }

        @keyframes loadingG {
            0% {
                transform: translate(-40px, 0) rotate(0deg);
            }
            50% {
                transform: translate(40px, 0) rotate(360deg);
            }
            100% {
                transform: translate(-40px, 0) rotate(0deg);
            }
        }

        .bg-white {
            background-color: white;
        }
    </style>
{% endblock %}

{#{% block header %}#}
{#{% endblock %}#}

{% block body %}
    {#TODO: move line to JS block when development is finished and there are no more dump functions#}
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

    <div id="expenses_app"
         :json="setStartData(
            {
                user: {name: '{{ app.user.firstName }} {{ app.user.lastName }}', email: '{{ app.user.email }}', personId: '{{ app.user.personId }}', iban: '{{ app.user.iban }}', address: '{{ app.user.address }}'},
                region: {id: {{ userRegion.id }}, name: '{{ userRegion.name }}'}
            }
         )">
        <div v-if="submitStatus !== 200">
            <h2>enkele spelregels</h2>
            <div class="col-md-12">
                <div class="alert alert-info">
                    <ul>
                        <li>We raden iedereen aan om zoveel mogelijk te carpoolen, je bewijst er de aarde (en dus ook
                            jezelf) een dienst mee!
                        </li>
                        <li>Bij misbruik worden er geen onkosten terugbetaald.</li>
{#                        <li>#}
{#                            5 keer per jaar betalen wij vervoersonkosten terug. Belangrijk is dat je vergaderingen#}
{#                            onmiddellijk#}
{#                            ingeeft in de onkostentool.<br>#}
{#                            Wanneer je onkosten doorgeeft van een initiatief na de deadline van terugbetaling, kunnen#}
{#                            wij geen#}
{#                            terugbetaling meer voorzien voor dat initiatief.<br>#}
{#                            Volgende data zijn jaarlijks vastgelegd:#}
{#                            <ul>#}
{#                                <li>Herfst: 30 November</li>#}
{#                                <li>Kerst: 31 januari</li>#}
{#                                <li>Krokus: 31 maart</li>#}
{#                                <li>Pasen: 31 mei</li>#}
{#                                <li>Zomer: 30 September</li>#}
{#                            </ul>#}
{#                        </li>#}
                    </ul>
                </div>
            </div>
            <h2 id="myDetails">Mijn gegevens</h2>
            <div class="validator" v-bind:class="[1 === 1 ? 'validator-ok' : 'validator-to-finish']">
                <div>
                    <span>Naam: <strong>${userData.name}</strong></span>
                    <a href="{{ path('user_profile') }}" class="btn btn-light fa fa-pencil"></a>
                </div>
                <div>
                    <span>Email: <strong>${userData.email}</strong></span>
                    <a href="{{ path('user_profile') }}" class="btn btn-light fa fa-pencil"></a>
                </div>
                <div>
                    <span>IBAN: <strong>${userData.iban}</strong></span>
                    <a href="{{ path('user_profile') }}" class="btn btn-light fa fa-pencil"></a>
                </div>
                <div>
                    <span>Rijksregisternummer: <strong>${userData.personId}</strong></span>
                    <a href="{{ path('user_profile') }}" class="btn btn-light fa fa-pencil"></a>
                </div>
            </div>
            <h2>Waarvoor dien je reisonkosten in?</h2>
            <div class="validator validator-ok">
                <h3 id="region">verbond</h3>
                <p>Je dient onkosten in voor <strong>${ region.name }</strong>. <span class="link"
                                                                                      v-on:click="enableRegionSelector">Klik hier</span>
                    om onkosten in te dienen voor een ander verbond.</p>
                <div v-show="regionSelectorActive" class="btnGroup">
                    <region
                            v-for="region in regions"
                            v-bind:id="region.id"
                            v-bind:name="region.name"
                            v-bind:key="region.id"
                    >
                    </region>
                </div>
            </div>

            <div class="validator"
                 v-bind:class="[groupNodes.length == 0 & crumbTrace.length > 0 ? 'validator-ok' : 'validator-to-finish']">
                <h3>Groep</h3>

                <div v-show="groupNodes.length == 0 & activityNodes.length == 0 & crumbTrace.length == 0" class="center-flex">
                    <span class="gray">activiteiten ophalen...</span>
                    <div class="square-holder">
                        <div class="square"></div>
                    </div>
                </div>

                <div class="center-flex">
                    <div class="flex-left">
                        <div class="crumb-container">
                            <crumb
                                    v-for="(name, index) in crumbTrace"
                                    v-bind:name="name"
                                    v-bind:key="index"
                            >
                            </crumb>
                        </div>
                        <span v-if="crumbTrace.length > 0" @click="resetGroups" class="btn btn-outline-danger btn-sm">reset</span>
                    </div>

                </div>

                <div class="btnGroup">
                    <group-node
                            v-for="(subTree, index) in groupNodes"
                            v-bind:tree="subTree.children"
                            v-bind:details="subTree.details"
                            v-bind:name="subTree.name"
                            v-bind:key="index"
                    ></group-node>
                </div>
            </div>


            <div class="validator" v-bind:class="[tripData.activity !== '' ? 'validator-ok' : 'validator-to-finish']">
                <h3 v-bind:class="[activityNodes.length == 0 ? 'gray' : '']">Activiteit</h3>
                <div class="btnGroup">
                    <activity-node
                            v-for="(activity, index) in activityNodes"
                            v-bind:name="activity.activity"
                            v-bind:key="index"
                    ></activity-node>
                </div>
            </div>

            <div class="validator" v-bind:class="[tripData.date != '' ? 'validator-ok' : 'validator-to-finish']">
                <h3>Datum</h3>
                <div class="flex-left">
                    <div class="form-group">
                        <span class="btn" v-bind:class="[tripData.date === getDaysAgo(0) ? 'btn-primary' : 'btn-light']"
                              @click="setTripDate('today')">vandaag</span>
                        <span class="btn" v-bind:class="[tripData.date === getDaysAgo(1) ? 'btn-primary' : 'btn-light']"
                              @click="setTripDate('yesterday')">gisteren</span>
                    </div>
                    <span>OF</span>
{#                    <input id="activityDate" type="text" class="form-control flex1" v-model="tripData.date">#}
                    <flat-pickr v-model="tripData.date" class="flex1 bg-white" :config="datePickerConfig"></flat-pickr>
                </div>
            </div>

            <div class="validator" v-bind:class="[tripData.to !== '' ? 'validator-ok' : 'validator-to-finish']">
                <h3>plaats</h3>

                <div class="flex-left">

                    <div v-if="region.id == 0" class="form-group">
                        <span class="btn" v-on:click="updateTo('CM Mechelen Noord')"
                              v-bind:class="[tripData.to === 'CM Mechelen Noord' ? 'btn-primary' : 'btn-light']">CM Mechelen</span>
                        <span class="btn" v-on:click="updateTo('CM Turnhout')"
                              v-bind:class="[tripData.to === 'CM Turnhout' ? 'btn-primary' : 'btn-light']">Bar Volontar</span>
                        <span class="btn" v-on:click="updateTo('Nesselaerstraat, 3590 Diepenbeek')"
                              v-bind:class="[tripData.to === 'Nesselaerstraat, 3590 Diepenbeek' ? 'btn-primary' : 'btn-light']">Vertrekplaats Diepenbeek</span>
                    </div>
                    <div v-if="region.id == 1" class="form-group">
                        <span class="btn" v-on:click="updateTo('Haachtsesteenweg 1805, 1130 Haren')"
                              v-bind:class="[tripData.to === 'Haachtsesteenweg 1805, 1130 Haren' ? 'btn-primary' : 'btn-light']">Verbondsgebouw</span>
                        <span class="btn" v-on:click="updateTo('Wilgenlaan 1, 1861 Meise')"
                              v-bind:class="[tripData.to === 'Wilgenlaan 1, 1861 Meise' ? 'btn-primary' : 'btn-light']">CM Meise</span>
                        <span class="btn" v-on:click="updateTo('Ninoofsesteenweg 176, 1700 Dilbeek')"
                              v-bind:class="[tripData.to === 'Ninoofsesteenweg 176, 1700 Dilbeek' ? 'btn-primary' : 'btn-light']">CM Dilbeek</span>
                        <span class="btn" v-on:click="updateTo('Molenbos1, 1731 Asse')"
                              v-bind:class="[tripData.to === 'Molenbos1, 1731 Asse' ? 'btn-primary' : 'btn-light']">Vertrekplaats Asse</span>
                        <span class="btn" v-on:click="updateTo('CM Mechelen Noord')"
                              v-bind:class="[tripData.to === 'CM Mechelen Noord' ? 'btn-primary' : 'btn-light']">Vertrekplaats Mechelen</span>
                        <span class="btn" v-on:click="updateTo('Nesselaerstraat, 3590 Diepenbeek')"
                              v-bind:class="[tripData.to === 'Nesselaerstraat, 3590 Diepenbeek' ? 'btn-primary' : 'btn-light']">Vertrekplaats Diepenbeek</span>
                    </div>
                    <div v-if="region.id == 4" class="form-group">
                        <span class="btn" v-on:click="updateTo('p')"
                              v-bind:class="[tripData.to === 'Platte-lo straat 541, 3010 Kessel-Lo' ? 'btn-primary' : 'btn-light']">Verbondsgebouw Leuven</span>
                        <span class="btn" v-on:click="updateTo('CM Mechelen Noord')"
                              v-bind:class="[tripData.to === 'CM Mechelen Noord' ? 'btn-primary' : 'btn-light']">Vertrekplaats Mechelen</span>
                        <span class="btn" v-on:click="updateTo('Nesselaerstraat, 3590 Diepenbeek')"
                              v-bind:class="[tripData.to === 'Nesselaerstraat, 3590 Diepenbeek' ? 'btn-primary' : 'btn-light']">Vertrekplaats Diepenbeek</span>
                    </div>
                    {#{% endif %}#}
                    <span>OF</span>
                    <input id="meetingLocation" class="form-control flex1"
                           v-model="tripData.to" placeholder="waar vond de activiteit plaats?"
                           type="text">
                </div>
            </div>


            <div class="validator" v-bind:class="[tripData.from !== '' ? 'validator-ok' : 'validator-to-finish']">
                <h3>Vertrekplaats</h3>
                <div class="flex-left">
                    <div class="form-group">
                        <span class="btn nowrap" @click="updateFrom(userData.address)"
                              v-bind:class="[userData.address === tripData.from ? 'btn-primary' : 'btn-light']">
                            <span class="fa fa-home"></span> Thuis
                        </span>
                    </div>
                    <span>OF</span>
                    <input id="departureLocation" class="form-control"
                           v-model="tripData.from" @blur.native="calculateDistance()"
                           placeholder="vertrekplaats" type="text">
                </div>
            </div>
            <div class="validator"
                 v-bind:class="[tripData.transportType !== '' && tripData.company !== '' ? 'validator-ok' : 'validator-to-finish']">
                <h3>Transportmiddel</h3>
                <div class="btnGroup">
                    <div v-bind:class="[tripData.transportType ? 'car' : '123', '456']"></div>
                    <span class="btn" v-bind:class="[tripData.transportType === 'car' ? 'btn-outline-primary' : 'btn-outline-light']"
                          v-on:click="tripData.transportType = 'car'">
                        <img
                                src="{{ asset('img/icons/suv-car.svg') }}"
                                alt="money icon"
                                height="120px"
                                width="120px" />
                        <br>
                    +50 cc</span>
                    <span class="btn"
                          v-bind:class="[tripData.transportType === 'publicTransport' ? 'btn-outline-primary' : 'btn-outline-light']"
                          v-on:click="tripData.transportType = 'publicTransport'">
                        <img
                                src="{{ asset('img/icons/train.svg') }}"
                                alt="money icon"
                                height="120px"
                                width="120px" />
                    </span>
                    <span class="btn" v-bind:class="[tripData.transportType === 'bike' ? 'btn-outline-primary' : 'btn-outline-light']"
                          v-on:click="tripData.transportType = 'bike'">
                        <img
                                src="{{ asset('img/icons/bicycle.svg') }}"
                                alt="money icon"
                                height="120px"
                                width="120px" />
                    </span>
                    <span class="btn"
                          v-bind:class="[tripData.transportType === 'scooter' ? 'btn-outline-primary' : 'btn-outline-light']"
                          v-on:click="tripData.transportType = 'scooter'">
                        <img
                                src="{{ asset('img/icons/scooter.svg') }}"
                                alt="money icon"
                                height="120px"
                                width="120px" />
                        <br>
                        -50 cc</span>
                </div>
                <div class="btnGroup" v-show="tripData.transportType === 'car'">
                    <span class="btn"
                          v-bind:class="[tripData.company === 'soloDriver' ? 'btn-outline-primary' : 'btn-outline-light']"
                          v-on:click="tripData.company = 'soloDriver'">
                        <img
                                src="{{ asset('img/icons/boss.svg') }}"
                                alt="money icon"
                                height="120px"
                                width="120px" />
                        <br>
                        alleen gereden
                    </span>
                    <span class="btn"
                          v-bind:class="[tripData.company === 'groupDriver' ? 'btn-outline-primary' : 'btn-outline-light']"
                          v-on:click="tripData.company = 'groupDriver'">
                        <img
                                src="{{ asset('img/icons/network.svg') }}"
                                alt="money icon"
                                height="120px"
                                width="120px" />
                        <br>
                        mensen meegenomen
                    </span>
                </div>
                <div v-show="tripData.transportType === 'publicTransport'">
                    <div class="uploadPriceContainer btnGroup">
                        <div class="upload-btn-wrapper">
                            <span class="btn btn-light"><span class="fa fa-folder"></span> Upload ticketjes</span>
                            <input type="file" @change="onFileChange" class="form-control" id="files" name="report"
                                   multiple="" required="true">
                        </div>
                        <div>
                            <div class="input-group width140">
                                <input class="form-control" v-model="tripData.price" placeholder="0"
                                       type="number" min="0" max="500"
                                       step="0.01">
                                <div class="input-group-append">
                                    <span class="input-group-text">&euro;</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="publicTransportTicketsGroup">
                        <div class="row publicTransportTicketContainer" v-for="(ticket, i) in tripData.tickets">
                            <div class="col-md-2 col-xs-2"></div>
                            <div class="col-md-10 col-xs-10">
                                <img :src="ticket.content" class="width100"/>
                            </div>
                            <div class="col-md-2 col-xs-2"></div>
                        </div>
                        <span v-if="tripData.tickets.length > 0" @click="removeTickets()"
                              class="btn btn-outline btn-danger"><span class="fa fa-remove"></span> verwijderen</span>
                    </div>
                </div>
                <div v-show="(tripData.transportType === 'bike' || tripData.transportType === 'car')" class="flex-center-h">
                    <img
                            src="{{ asset('img/icons/dollar.svg') }}"
                            alt="money icon"
                            height="32px"
                            width="32px" />
                    <strong v-show="(tripData.transportType === 'car')" style="padding-left: 6px;">0,25 &euro;/Km</strong>
                    <strong v-show="(tripData.transportType === 'bike')" style="padding-left: 6px;">0,22 &euro;/Km</strong>
                </div>
                <br>
                <div v-show="(tripData.transportType === 'car' || tripData.transportType === 'bike')">
                    <h3>Hoeveel Km heb je afgelegd? (heen + terug)</h3>
                    <div v-if="distanceError" class="alert alert-warning">
                        ${ distanceError }
                    </div>
                    <div v-show="tripData.estimateDistance > 0">
                        <br>
                        <div class="flex-center-h">
                            <p class="flex-center-h">Schatting Google maps is <span class="estimateDistance"  v-bind:class="[tripData.distance !== tripData.estimateDistance ? 'strikethrough' : '']">${String(tripData.estimateDistance).replace('.',',')} Km</span>
                            </p>
                            <span v-on:click="tripData.distance = Math.ceil(tripData.estimateDistance) - 1"
                                  class="btn btn-light fa fa-pencil"></span>
                        </div>
                    </div>

                    <div class="form-group" v-show="tripData.distance !== tripData.estimateDistance">
                        <div class="btnGroup">
                            <div class="input-group limitWidthGroup">
                                <input class="form-control" v-model="tripData.distance"
                                       type="number" min="0" max="5000"
                                       step="0.01">
                                <div class="input-group-append">
                                    <span class="input-group-text">Km</span>
                                </div>
                            </div>
                            <span v-show="tripData.estimateDistance > 0" class="btn btn-outline-danger" @click="tripData.distance = tripData.estimateDistance">reset</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="validator" v-bind:class="['todo' != 'todo' ? 'validator-ok' : 'validator-to-finish']">
                <h3>Opmerkingen</h3>
                <div class="form-group">
                <textarea class="form-control" v-model="tripData.comment"
                          placeholder="verdere opmerkingen? Ben je iemand gaan ophalen? Vermeld hier wie en waar"
                          type="text"></textarea>
                </div>
            </div>


        </div>


        <div class="validator" v-bind:class="submitStatusClass">
            <h3>Indienen</h3>
            <button v-if="submitStatus !== 200" class="btn btn-success" @click="createTrip">Indienen</button>
            <a href="{{ path('expenses') }}" v-if="submitStatus === 200" class="btn btn-success">Terug naar overzicht</a>
            <div v-if="submitStatus === 1" class="flex-center-h">
                <div>
                    <span class="gray">onkosten indienen...</span>
                    <div class="square-holder">
                        <div class="square"></div>
                    </div>
                </div>
            </div>
            <div v-show="submitStatus === 200" class="alert alert-success">Je onkosten zijn succesvol opgeslagen!<br>Je kan de QR code hieronder gebruiken om je onkost te delen met anderen.
                <br>Zo maak je het hen nog makkelijker!</div>
            <div v-show="submitStatus === 500 && formErrors.length" class="<div alert alert-danger">
                <ul>
                    <form-errors
                            v-for="error in formErrors"
                            v-bind:error="error"
                            v-bind:key="error">
                    </form-errors>
                </ul>g
            </div>
            <div v-show="submitStatus === 500" class="alert alert-danger">
                Er heeft zich een probleem voorgedaan en je onkosten zij niet opgeslagen.
                </br>Controleer of alle velden correct werden ingevuld. Indien het probleem zich blijft voor doen, kan
                je het Kazou team contacteren.
            </div>

        </div>

        <div id="qrcode"></div>
        <p class="qrCode_text">${qrLink}</p>

    </div>

{% endblock %}


    {% block javascripts %}
        {{ parent() }}
        <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
        <script src="{{ asset('js/vue/vue-flatpickr.js') }}"></script>

        <script src="{{ asset('js/lib/cleave.min.js') }}"></script>
        <script src="{{ asset('js/lib/qrcode.min.js') }}"></script>

        <script src={{ asset('/js/vue/expensesAdd.js?v=1') }}></script>

        <script>
            // This example displays an address form, using the autocomplete feature
            // of the Google Places API to help users fill in the information.

            // This example requires the Places library. Include the libraries=places
            // parameter when you first load the API. For example:
            // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

            var autocompleteAddress, autocompleteMeetingLocation, autocompleteDepartureLocation;

            function initAutocomplete() {
                // Create the autocomplete object, restricting the search to geographical
                // location types.

                autocompleteAddress = new google.maps.places.Autocomplete(
                    /** @type {!HTMLInputElement} */(document.getElementById('address')),
                    {types: ['geocode']});
                autocompleteAddress.addListener('place_changed', function () {
                    var place = document.getElementById('address').value;
                    app.forceUpdateMapsField(place, 'this.userData.address');
                    app.calculateDistance();
                });

                autocompleteMeetingLocation = new google.maps.places.Autocomplete(
                    /** @type {!HTMLInputElement} */(document.getElementById('meetingLocation')),
                    {types: ['geocode']});
                autocompleteMeetingLocation.addListener('place_changed', function () {
                    var place = document.getElementById('meetingLocation').value;
                    app.forceUpdateMapsField(place, 'this.tripData.to');
                    app.calculateDistance();
                });

                autocompleteDepartureLocation = new google.maps.places.Autocomplete(
                    /** @type {!HTMLInputElement} */(document.getElementById('departureLocation')),
                    {types: ['geocode']});
                autocompleteDepartureLocation.addListener('place_changed', function () {
                    var place = document.getElementById('departureLocation').value;
                    app.forceUpdateMapsField(place, 'this.tripData.from');
                    app.calculateDistance();
                });

            }
        </script>
        <script src="{{ 'https://maps.googleapis.com/maps/api/js?key=' ~ google_api_key ~ '&libraries=places&callback=initAutocomplete' }}"
                async defer>
        </script>

        <script type="text/x-template" id="group-node-template">
            <span data-id="1" @click="onClick" class="btn btn-light">{{ "{{ getLabel }}" }}</span>
        </script>

        <script type="text/x-template" id="activity-node-template">
            <span data-id="1" @click="onClick" class="btn" v-bind:class="getBtnType">{{ "{{ name }}" }}</span>
        </script>

    {% endblock %}
